// <auto-generated />
using System;
using DOAMapper.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DOAMapper.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("DOAMapper.Models.Entities.Alliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AllianceId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("FortressLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FortressX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FortressY")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ImportSessionId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("OverlordName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("Power")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.HasIndex("ImportSessionId");

                    b.HasIndex("Name");

                    b.HasIndex("AllianceId", "ValidFrom");

                    b.HasIndex("IsActive", "ValidFrom");

                    b.ToTable("Alliances");
                });

            modelBuilder.Entity("DOAMapper.Models.Entities.ImportSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentPhase")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentPhaseNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentPhaseProgressPercentage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastProgressUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhaseDetailsJson")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecordsChanged")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecordsProcessed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalPhases")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("ImportDate");

                    b.HasIndex("Status");

                    b.ToTable("ImportSessions");
                });

            modelBuilder.Entity("DOAMapper.Models.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AllianceId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ImportSessionId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Might")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.HasIndex("ImportSessionId");

                    b.HasIndex("Name");

                    b.HasIndex("PlayerId");

                    b.HasIndex("IsActive", "ValidFrom");

                    b.HasIndex("PlayerId", "ValidFrom");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("DOAMapper.Models.Entities.Tile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AllianceId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ImportSessionId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("TEXT");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.HasIndex("ImportSessionId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("IsActive", "ValidFrom");

                    b.HasIndex("PlayerId", "ValidFrom");

                    b.HasIndex("X", "Y");

                    b.HasIndex("X", "Y", "ValidFrom");

                    b.ToTable("Tiles");
                });

            modelBuilder.Entity("DOAMapper.Models.Entities.Alliance", b =>
                {
                    b.HasOne("DOAMapper.Models.Entities.ImportSession", "ImportSession")
                        .WithMany()
                        .HasForeignKey("ImportSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportSession");
                });

            modelBuilder.Entity("DOAMapper.Models.Entities.Player", b =>
                {
                    b.HasOne("DOAMapper.Models.Entities.ImportSession", "ImportSession")
                        .WithMany()
                        .HasForeignKey("ImportSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportSession");
                });

            modelBuilder.Entity("DOAMapper.Models.Entities.Tile", b =>
                {
                    b.HasOne("DOAMapper.Models.Entities.ImportSession", "ImportSession")
                        .WithMany()
                        .HasForeignKey("ImportSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportSession");
                });
#pragma warning restore 612, 618
        }
    }
}
