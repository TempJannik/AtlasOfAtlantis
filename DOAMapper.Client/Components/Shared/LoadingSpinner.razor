<div class="dragon-loading">
    @if (LoadingType == LoadingType.Spinner)
    {
        <div class="dragon-spinner @SizeClass" role="status">
            <span class="visually-hidden">@LoadingText</span>
        </div>
    }
    else if (LoadingType == LoadingType.Dots)
    {
        <div class="dragon-loading-dots">
            <div class="dragon-dot"></div>
            <div class="dragon-dot"></div>
            <div class="dragon-dot"></div>
        </div>
    }
    else if (LoadingType == LoadingType.Pulse)
    {
        <div class="dragon-loading-pulse @SizeClass"></div>
    }

    @if (!string.IsNullOrEmpty(LoadingText))
    {
        <span style="color: var(--dragon-text-secondary);">@LoadingText</span>
    }

    @if (ShowProgress && ProgressPercentage.HasValue)
    {
        <div class="mt-2">
            <div class="progress" style="height: 4px;">
                <div class="progress-bar" style="width: @(ProgressPercentage)%"></div>
            </div>
            <small class="text-muted">@ProgressPercentage%</small>
        </div>
    }
</div>

@using DOAMapper.Shared.Models.Enums

@code {
    [Parameter] public string LoadingText { get; set; } = "Loading...";
    [Parameter] public LoadingType LoadingType { get; set; } = LoadingType.Spinner;
    [Parameter] public LoadingSize Size { get; set; } = LoadingSize.Medium;
    [Parameter] public bool ShowProgress { get; set; } = false;
    [Parameter] public int? ProgressPercentage { get; set; }

    private string SizeClass => Size switch
    {
        LoadingSize.Small => "spinner-border-sm",
        LoadingSize.Large => "spinner-border-lg",
        _ => ""
    };
}
